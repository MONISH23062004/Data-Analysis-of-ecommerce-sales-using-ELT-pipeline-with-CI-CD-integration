name: dbt CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  dbt-build:
    runs-on: ubuntu-latest

    steps:
      - name: âœ… Step 1: Checkout repository
        uses: actions/checkout@v3

      - name: âœ… Step 2: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: âœ… Step 3: Install dbt and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install dbt-core dbt-snowflake python-dotenv

      - name: âœ… Step 4: Create Snowflake dbt profile
        run: |
          mkdir -p ~/.dbt
          echo "ecommerce_dbt:" > ~/.dbt/profiles.yml
          echo "  target: dev" >> ~/.dbt/profiles.yml
          echo "  outputs:" >> ~/.dbt/profiles.yml
          echo "    dev:" >> ~/.dbt/profiles.yml
          echo "      type: snowflake" >> ~/.dbt/profiles.yml
          echo "      account: ${{ secrets.DBT_ACCOUNT }}" >> ~/.dbt/profiles.yml
          echo "      user: ${{ secrets.DBT_USER }}" >> ~/.dbt/profiles.yml
          echo "      password: ${{ secrets.DBT_PASSWORD }}" >> ~/.dbt/profiles.yml
          echo "      role: ${{ secrets.DBT_ROLE }}" >> ~/.dbt/profiles.yml
          echo "      database: ${{ secrets.DBT_DATABASE }}" >> ~/.dbt/profiles.yml
          echo "      warehouse: ${{ secrets.DBT_WAREHOUSE }}" >> ~/.dbt/profiles.yml
          echo "      schema: ${{ secrets.DBT_SCHEMA }}" >> ~/.dbt/profiles.yml
          echo "      threads: 1" >> ~/.dbt/profiles.yml

      - name: ðŸš€ Step 5: Verify DBT Snowflake connection (dbt debug)
        run: dbt debug
        working-directory: dbt_project/ecommerce_dbt

      - name: ðŸŽ¯ Step 6: Deploy models using dbt build
        run: dbt build --full-refresh
        working-directory: dbt_project/ecommerce_dbt
